SRCS    =       main.c tree.c io.c particle.c sfc.c parallel.c \
                cell_buffer.c iterators.c index_hash.c   \
                load_balance.c timestep.c density.c viewdump.c \
                tree_count.c tree_debug.c tree_alloc.c tree_interpolate.c tree_arrays.c \
                refinement.c refinement_indicators.c refinement_operations.c \
                timing.c tree_linkedlist.c hydro.c units.c riemann.c gravity.c \
                poisson.c auxiliary.c skiplist.c pack.c config.c logging.c \
		cooling.c starformation.c cache.c analysis.c analysis_xray.c power.c hydro_tracer.c top_level_fft.c

RT_CSRCS =	rt_solver.c rt_transfer.c rt_utilities.c rt_io.c rt_otvet.c rt_otvet_et.c

RT_FSRCS  =	frt_base.F frt_cooling.F frt_cooling_solvers.F frt_io.F \
		frt_global.F frt_inline.F frt_lwbands.F frt_spectrum.F \
		frt_tables.F frt_transfer.F frt_xrays.F frt_testing.F frt_mpi.F

HEADERS  =	$(patsubst %.c,$(SRC_DIR)/%.h,$(SRCS))
FHEADERS =	$(patsubst %.F,$(SRC_DIR)/F/%.inc,$(FSRCS))

ifdef NO_RT
OBJS    =	$(patsubst %.c,.obj/%.o,$(SRCS))
else
OBJS    =	$(patsubst %.c,.obj/%.o,$(SRCS)) $(patsubst %.c,.obj/rt/%.o,$(RT_CSRCS)) $(patsubst %.F,.obj/rt/F/%.o,$(RT_FSRCS))
endif

LIBS    =       -lgsl -lgslcblas -lm -lsrfftw -lsfftw 

ifdef PLATFORM
include $(TOP_DIR)/platforms/$(PLATFORM)
.obj:
	mkdir .obj .obj/rt .obj/rt/F
else
.obj:
	@echo "A variable PLATFORM must be set. Available platforms:"
	@ls -m $(TOP_DIR)/platforms
	@cat $(TOP_DIR)/platforms >& /dev/null
endif

.obj/%.o: defs.h $(SRC_DIR)/%.c
	$(CC) -c $(CFLAGS) $(INCLUDES) -I. -I$(SRC_DIR) -o $@ $(SRC_DIR)/$(*F).c

.obj/rt/%.o: defs.h rt_defs.h $(SRC_DIR)/rt_config.h $(SRC_DIR)/%.c
	$(CC) -c $(CFLAGS) $(INCLUDES) -I. -I$(SRC_DIR) -o $@ $(SRC_DIR)/$(*F).c

.obj/rt/F/%.o: defs.h rt_defs.h $(SRC_DIR)/rt_config.h $(SRC_DIR)/F/%.F
	$(F77) -c $(FFLAGS) -I. -I$(SRC_DIR)/F -o $@ $(SRC_DIR)/F/$(*F).F

