SRCS    =       main.c \
		auxiliary.c \
		cache.c \
		cell_buffer.c \
		config.c \
		control_parameter.c \
		cooling.c \
		cosmology.c \
		density.c \
		gravity.c \
		hydro.c \
		hydro_tracer.c \
		io.c \
		index_hash.c \
		iterators.c \
		load_balance.c \
		logging.c \
		pack.c \
		parallel.c \
		particle.c \
		plugin.c \
		poisson.c \
		refinement.c \
		refinement_indicators.c \
		refinement_operations.c \
		riemann.c \
		rt_debug.c \
		rt_global.c \
		rt_io.c \
		rt_otvet.c \
		rt_otvet_et.c \
		rt_solver.c \
		rt_transfer.c \
		rt_utilities.c \
		sfc.c \
		skiplist.c \
		starformation.c \
		starformation_feedback.c \
		starformation_recipes.c \
		system.c \
		timestep.c \
		timing.c \
		top_level_fft.c \
		tree.c \
		tree_arrays.c \
		tree_alloc.c \
		tree_count.c \
		tree_debug.c \
		tree_interpolate.c \
		tree_linkedlist.c \
		units.c

FSRCS  =	frt_background.F \
		frt_base.F \
		frt_cooling.F \
		frt_cooling_solvers.F \
		frt_global.F \
		frt_io.F \
		frt_lwbands.F \
		frt_mpi.F \
		frt_spectrum.F \
		frt_tables.F \
		frt_testing.F \
		frt_transfer.F \
		frt_xrays.F

EXT_SRCS  =	cd.c \
		chull.c \
		gic_tools.c \
		halo_finder.c \
		healpix.c \
		ifrit.c \
		igm.c \
		ism.c \
		los.c \
		mesh.c \
		power.c \
		rfsfr.c \
		utils.c \
		viewdump.c \
		xrays.c \
		output_slice.c \
		ng_analysis.c 

OBJS    =	$(patsubst %.c,.obj/./%.o,$(SRCS)) $(patsubst %.F,.obj/F/%.o,$(FSRCS))
HEADERS  =	$(patsubst %.c,$(SRC_DIR)/%.h,$(SRCS))

EXT_OBJS = 	$(patsubst %.c,.obj/extra/%.o,$(EXT_SRCS))

ifdef PLATFORM
include $(TOP_DIR)/platforms/$(PLATFORM)
.obj:
	mkdir .obj .obj/F .obj/extra
else
.obj:
	@echo "A variable PLATFORM must be set. Available platforms:"
	@ls -m $(TOP_DIR)/platforms
	@cat $(TOP_DIR)/platforms >& /dev/null
endif

ifndef FFTWLIBS
# 2.1.5
FFTWLIBS    = -lsrfftw -lsfftw
# 2.1.5 openmp
#FFTWLIBS   = -lsrfftw_threads -lsrfftw -lsfftw_threads -lsfftw
# 3.2.2 (--enable-float)
#FFTWLIBS   = -lfftw3f
# 3.2.2 openmp (without --with-combined-threads option)
#FFTWLIBS   = -lfftw3f_threads -lfftw3f
endif

LIBS    =       -lgsl -lgslcblas -lm $(FFTWLIBS)

DEFS = defs.h
defs.h:	
	@echo "Configuration file defs.h must be set. Available templates:"
	@ls -1 $(TOP_DIR)/config/defs.*
	@cat $(TOP_DIR)/platforms >& /dev/null

WITH_RT = $(shell fgrep RADIATIVE_TRANSFER defs.h)

ifneq ($(strip $(WITH_RT)),)
DEFS += rt_defs.h
rt_defs.h:	
	@echo "Configuration file rt_defs must be set. Available templates:"
	@ls -1 $(TOP_DIR)/config/rt_defs.*
	@cat $(TOP_DIR)/platforms >& /dev/null
endif

.obj/./%.o: $(DEFS) $(SRC_DIR)/%.c
	$(CC)  -c $(CFLAGS) $(INCLUDES) -I. -I$(SRC_DIR) -o $@ $(SRC_DIR)/$(*F).c

.obj/./config.o: $(DEFS) $(TOP_DIR)/config/list_defines.h $(SRC_DIR)/config.c
	$(CC)  -c $(CFLAGS) $(INCLUDES) \
	-DSVNREVISION="\"`svnversion -n $(TOP_DIR)`\"" \
	-DSVNBRANCH="\"`svn info $(TOP_DIR) | sed -ne 's#^URL: https://www.drudd.com/svn/cart/##p'`\"" \
	-I. -I$(SRC_DIR) -o $@ $(SRC_DIR)/$(*F).c

.obj/F/%.o: $(DEFS) $(SRC_DIR)/rt_config.h $(SRC_DIR)/F/%.F
	$(F77) -c $(FFLAGS) $(INCLUDES) -I. -I$(SRC_DIR)/F -o $@ $(SRC_DIR)/F/$(*F).F

.obj/extra/%.o: $(DEFS) $(SRC_DIR)/extra/%.c
	$(CC) -c $(CFLAGS) $(INCLUDES) -I. -I$(SRC_DIR) -o $@ $(SRC_DIR)/extra/$(*F).c

$(info **********************************************)
$(info *                                            *)
$(info *          Adaptive Refinement Tree          *)
$(info *                                            *)
$(info **********************************************)
$(info Compiling for platform: $(PLATFORM))
